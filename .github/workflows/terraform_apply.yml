name: Terraform Apply on ADB Provision (GitOps + ClickOps)

on:
  pull_request:
    branches:
      - main
    paths:
      - 'oe_01/oci/dev/**/adb/**/*.tf'
      - 'oe_01/oci/dev/**/adb/**/inputs.json'
  push:
    branches:
      - main
    paths:
      - 'oe_01/oci/dev/**/adb/**/run_terraform.txt'

env:
  FINAL_REGION: ${{ secrets.OCI_REGION || 'eu-frankfurt-1' }}
  TF_VAR_adb_password_secret_ocid: ${{ secrets.OCI_ADB_PASSWORD_SECRET_OCID }}

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Terraform Working Directory
        id: set_working_dir
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
            WORKING_DIR=$(echo "$CHANGED_FILES" \
              | grep -oE 'oe_01/oci/dev/[A-Za-z0-9_-]+/adb/[A-Za-z0-9_-]+' \
              | head -n 1)
            if [ -z "$WORKING_DIR" ]; then
              echo "No se encontr√≥ run_terraform.txt en path de ADB. Saliendo."
              echo "::set-output name=project_found::false"
              exit 0
            fi
          else
            CHANGED_FILES=$(git diff --name-only origin/main ${{ github.sha }})
            WORKING_DIR=$(echo "$CHANGED_FILES" \
              | grep -oE 'oe_01/oci/dev/[A-Za-z0-9_-]+/adb/[A-Za-z0-9_-]+' \
              | head -n 1)
            if [ -z "$WORKING_DIR" ]; then
              echo "No se detectaron cambios relevantes en ADB. Saliendo."
              echo "::set-output name=project_found::false"
              exit 0
            fi
          fi

          echo "Determined Terraform Working Directory: $WORKING_DIR"
          echo "TF_WORKING_DIR=$WORKING_DIR/terraform" >> $GITHUB_ENV
          echo "::set-output name=project_found::true"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.1
          terraform_wrapper: true

      - name: Terraform Init
        if: steps.set_working_dir.outputs.project_found == 'true'
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform init -upgrade \
            -backend-config="bucket=${{ secrets.OCI_TF_STATE_BUCKET }}" \
            -backend-config="namespace=${{ secrets.OCI_TF_STATE_NAMESPACE }}" \
            -backend-config="region=${{ env.FINAL_REGION }}" \
            -backend-config="key=${{ env.TF_WORKING_DIR }}/terraform.tfstate"

      - name: Terraform Validate & Format Check
        if: steps.set_working_dir.outputs.project_found == 'true'
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform fmt -check -recursive || true
          terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request' && steps.set_working_dir.outputs.project_found == 'true'
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform plan -no-color -var-file=../inputs.json -out=tfplan > plan.txt || exit 1
        continue-on-error: true

      - name: Update Pull Request with Plan
        if: github.event_name == 'pull_request' && steps.set_working_dir.outputs.project_found == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const planOutput = require('fs').readFileSync('plan.txt', 'utf8');
            const body = `
            #### Terraform Initialization ‚öôÔ∏è \`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ \`${{ steps.validate.outcome }}\`
            ### Terraform Plan üìñ \`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${planOutput}
            \`\`\`

            </details>

            _Pushed by @${{ github.actor }}, Event: \`${{ github.event_name }}\`_`;
                        await github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body
                        });

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure' && github.event_name == 'pull_request'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.set_working_dir.outputs.project_found == 'true'
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform apply -no-color -auto-approve -var-file=../terraform.tfvars.json

      - name: Remove run_terraform.txt marker
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.set_working_dir.outputs.project_found == 'true'
        run: |
          MARKER_DIR=$(dirname "${{ env.TF_WORKING_DIR }}")
          rm -f "$MARKER_DIR/run_terraform.txt"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$MARKER_DIR/run_terraform.txt"
          git commit -m "ci: remove run_terraform.txt after apply"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
